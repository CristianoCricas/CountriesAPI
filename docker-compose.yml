version: '3.4'

services:
  countriesapi:
    container_name: countriesapi
    depends_on: [postgres]
    image: ${DOCKER_REGISTRY-}countriesapi
    build:
      context: .
      dockerfile: src/CountriesAPI/Dockerfile
    ports:
      - ${DOCKER_API_PORT}:443
    networks:
      - appnetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=cricas123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/CountriesAPIcert.pfx
    links:
      - postgres
    volumes:
      - ./src:/https:ro

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: countries_db
      POSTGRES_PASSWORD: Cric@s
    ports:
      - ${DOCKER_POSTGRES_PORT}:5432
    networks:
      - appnetwork
    volumes:
      - ./docker/postgresql/db-data/:/var/lib/postgresql/data/
      - ./docker/postgresql/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  adminer:
    container_name: adminer
    depends_on: [postgres]
    image: adminer
    restart: always
    ports:
      - ${DOCKER_ADMINER_PORT}:8080
    networks:
      - appnetwork

networks:
  appnetwork:
